package M09.UF1.Act6;

import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.util.Base64;
import java.util.Scanner;

/**
 *
 * @author Marc
 */

public class Generacio {
 
    
    String clauPri, clauPu;
    
    
    public static void main(String args[]) throws FileNotFoundException, IOException{
    
        Scanner scanner = new Scanner (System.in);
        //Declarem les variables
        KeyPair clave;
        int Ksize = 512;
        PrivateKey privateKey;
        PublicKey publicKey;
    
        //Generem el parell de claus
        clave = randomGenerate (Ksize);
        
        
        //Agafem la clau privada i publica generada
        privateKey = clave.getPrivate(); 
        publicKey = clave.getPublic();
        
        /*Executem les funcions per a crear els arxius i li pasem com a 
        parametres la clau publica i la privada*/
        publicKeyFile(publicKey);
        privateKeyFile(privateKey);

    }
    
    //Generem el parell de claus
    
    public static KeyPair randomGenerate(int longuitudClau) {
            KeyPair keys = null;
            try {
                KeyPairGenerator keyGen = KeyPairGenerator.getInstance("RSA");
                keyGen.initialize(longuitudClau);
                keys = keyGen.genKeyPair();
            } catch (Exception ex) {
                System.err.println("Generador no disponible.");
            }
        return keys;
        }
    
    /*Guardem la clau Publica a un arxiu anomenat clauPublica.txt
    */
    public static void publicKeyFile(PublicKey pub) throws IOException{  
       Base64.Encoder encoder = Base64.getEncoder();
        try (FileWriter out = new FileWriter("clauPublica")) {
            //afegim aquesta linia per a saber quan comená la calau publica i quan acaba
            out.write("—-BEGIN RSA PUBLIC KEY—-");
            out.write("\n");
            //guardem la clau
            out.write(encoder.encodeToString(pub.getEncoded()));
            out.write("\n");

            out.write("—-END RSA PUBLIC KEY—-");
            out.write("\n");
            out.close();
        } catch (IOException ex) {
            System.out.println("Archivo con la llave publica no creado");
        }
    }
    
    /*Guardem la clau Privada a un arxiu anomenat clauPrivada.txt
    */
    public static void privateKeyFile(PrivateKey priv) throws IOException{  
        Base64.Encoder encoder = Base64.getEncoder();
        try (FileWriter out = new FileWriter("clauPrivada")) {
            //afegim aquesta linia per a saber quan comená la calau privada i quan acaba
            out.write("—-BEGIN RSA PRIVATE KEY—-");
            out.write("\n");
            //guardem la clau
            out.write(encoder.encodeToString(priv.getEncoded()));
            out.write("\n");

            out.write("—-END RSA PRIVATE KEY—-");
            out.write("\n");
            out.close();
        } catch (IOException ex) {
            System.out.println("Archivo con la llave privada no creado");
        }
    }   
}
